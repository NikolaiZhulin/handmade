import { GetServerSidePropsContext, InferGetServerSidePropsType } from 'next';
import Head from 'next/head';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import * as clipboard from 'clipboard-polyfill';
import { toast } from 'react-toastify';

import Header from '@/components/Header';
import Container from '@/layout/Container';
import MainWrapper from '@/layout/MainWrapper';
import Main from '@/layout/Main';
import Footer from '@/components/Footer';
import { getUserPosts } from '@/api/posts/get-user-posts';
import LeftBlock from '@/layout/LeftBlock';
import RightBlock from '@/layout/RightBlock';
import CategoryContainer from '@/components/CategoryContainer';
import ContactsBlock from '@/components/UserPosts/ContactsBlock';
import PostsBlock from '@/components/UserPosts/PostsBlock';
import { HomeSvgSelector } from '@/components/svg/HomeSvgSelector';
import { CONTACT_LINKS } from '@/layout/RightBlockPost/config';
import Typography from '@/ui/Typography';
import { useTranslation } from '@/hooks/useTranslation';

export const getServerSideProps = async (ctx: GetServerSidePropsContext<{ id: string }>) => {
  const params = ctx.params;
  const data = await getUserPosts(params?.id ?? '');

  return {
    props: {
      posts: data.posts,
      user: data.user,
      ...(await serverSideTranslations(ctx.locale ?? ctx.defaultLocale ?? '', ['common'])),
    },
  };
};

const PostPage = ({ posts, user }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const { t } = useTranslation();

  const copyHandler = (text: string) => () => {
    clipboard.writeText(text);
    toast.success(t('toasts.copied'));
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header isHideSearch={true} />
      <Container>
        <Main className="xs:!pt-[53px]">
          <MainWrapper className="2xl:!mt-0">
            <LeftBlock className="2xl:hidden">
              <CategoryContainer />
            </LeftBlock>
            <RightBlock
              style={{ overflow: 'unset' }}
              className="flex justify-between gap-[30px] 2xl:flex-col xs:!px-[20px] xs:!pt-[14px]"
            >
              <ContactsBlock user={user} />
              <PostsBlock posts={posts} />
              <div className="hidden border-b-[1px] border-light-gray border-solid 2xl:block">
                <Typography
                  className="py-[10px] border-t-[1px] border-solid border-light-gray"
                  variant="heading2"
                >
                  {t('post.contacts')}
                </Typography>
                {Object.entries({
                  tube: user.additionalPhone,
                  telegram: user.telegram,
                  whatsApp: user.whatsApp,
                  viber: user.viber,
                  facebook: user.facebook,
                }).map(([key, value]) =>
                  value ? (
                    <div
                      className="flex items-center gap-[14px] py-[10px] border-t-[1px] border-light-gray border-solid"
                      key={key}
                    >
                      <div className="[&>svg]:w-[24px] [&>svg]:h-[24px] sv">
                        <HomeSvgSelector id={key} />
                      </div>
                      <a
                        href={`${CONTACT_LINKS[key as keyof typeof CONTACT_LINKS] ?? ''}${value}`}
                        target="_blank"
                        className="text-blue underline underline-offset-2"
                      >
                        {value}
                      </a>
                      <button onClick={copyHandler(value)} className="ml-auto">
                        <HomeSvgSelector id="copy" />
                      </button>
                    </div>
                  ) : null,
                )}
              </div>
            </RightBlock>
          </MainWrapper>
        </Main>
      </Container>
      <Footer />
    </>
  );
};

export default PostPage;
