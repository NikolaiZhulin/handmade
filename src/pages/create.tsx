import { GetServerSidePropsContext } from 'next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import Head from 'next/head';
import { useState } from 'react';

import CreateInfo from '@/components/CreateInfo';
import CreatePreview from '@/components/CreatePreview';
import Footer from '@/components/Footer';
import Header from '@/components/Header';
import { CreatePostContext } from '@/contexts/CreatePostContext';
import { useCreatePostContext } from '@/hooks/useCreatePostContext/useCreatePostContext';
import { useMediaQuery } from '@/hooks/useMediaQuery';
import { useTranslation } from '@/hooks/useTranslation';
import Container from '@/layout/Container';
import LeftBlock from '@/layout/LeftBlock';
import Main from '@/layout/Main';
import MainWrapper from '@/layout/MainWrapper';
import RightBlock from '@/layout/RightBlock';

export const getServerSideProps = async (context: GetServerSidePropsContext) => {
  return {
    props: {
      ...(await serverSideTranslations(context.locale ?? context.defaultLocale ?? '', ['common'])),
    },
  };
};

export default function Home() {
  const context = useCreatePostContext();
  const isLaptop = useMediaQuery('(max-width: 1200px)');
  const [step, setStep] = useState(0);
  const {
    t,
    i18n: { language },
  } = useTranslation();

  return (
    <>
      <Head>
        <title>Create ad</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header isHideSearch={true} />
      <Main>
        <Container className="2xl:!h-auto 2xl:min-h-[calc(100vh-96px)] xs:p-[0] 2xl:px-[30px] 2xl:py-0">
          <MainWrapper className="2xl:!mt-0 2xl:h-full 2xl:min-h-[calc(100vh-96px)]">
            <CreatePostContext.Provider value={context}>
              <LeftBlock className="flex flex-col w-full gap-[18px] py-[30px] bg-white rounded-[6px] !mt-0 2xl:!h-auto 2xl:!static xs:!px-[20px] xs:!py-[14px] 2xl:!py-0 xs:!pt-0 xs:gap-0">
                <CreateInfo
                  step={step}
                  setStep={(direction) => setStep((prev) => prev + direction)}
                />
              </LeftBlock>
              {!isLaptop && (
                <RightBlock>
                  <CreatePreview step={step} />
                </RightBlock>
              )}
            </CreatePostContext.Provider>
          </MainWrapper>
        </Container>
      </Main>
      {!isLaptop && <Footer />}
    </>
  );
}
